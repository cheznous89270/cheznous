---
// Configuration & Types
import type { RestaurantEntry, NearbyEntry } from "../types/content";
import CookieConsentProvider from "../components/ui/CookieConsentComponent";
// Layouts & Components
import BaseLayout from "@layouts/BaseLayout.astro";
import {
    Hero,
    RestaurantSection,
    MenuSection,
    EventSection,
    NearbySection,
    InfoSection,
} from "@components/index";

// Data loading
import { getCollection, getEntry } from "astro:content";

// Load all content collections in parallel
const [globalEntries, restaurantEntries, nearbyEntries] = await Promise.all([
    getCollection("global"),
    getCollection("restaurant"),
    getCollection("nearby"),
]);

// Get global text content
const restaurantText = globalEntries.find((e) => e.slug === "restaurant-text");
if (!restaurantText) throw new Error("'restaurant-text' est manquant");

const nearbyText = globalEntries.find((e) => e.slug === "nearby-text");
if (!nearbyText) throw new Error("'nearby-text' est manquant");

const sortedRestaurants = [...restaurantEntries].sort(
    (a, b) => a.data.id - b.data.id,
);
const groupedRestaurants: RestaurantEntry[][] = [[], [], []];
groupedRestaurants[0].push(...sortedRestaurants.slice(0, 2));
groupedRestaurants[1].push(...sortedRestaurants.slice(2, 3));
groupedRestaurants[2].push(...sortedRestaurants.slice(3, 5));

if (sortedRestaurants.length > 5) {
    for (let i = 5; i < sortedRestaurants.length; i++) {
        // Start with column 1 (second column), then cycle through 2, 0, 1, 2, 0, etc.
        const mod = (i - 5) % 3;
        const columnIndex = (mod + 1) % 3;
        groupedRestaurants[columnIndex].push(sortedRestaurants[i]);
    }
}

const sortedNearbies = [...nearbyEntries].sort((a, b) => a.data.id - b.data.id);
const sortedNearbies = [...nearbyEntries].sort((a, b) => a.data.id - b.data.id);
const groupedNearbies: NearbyEntry[][] = [[], [], []];

groupedNearbies[0].push(...sortedNearbies.slice(0, 2));
groupedNearbies[1].push(...sortedNearbies.slice(2, 3));
groupedNearbies[2].push(...sortedNearbies.slice(3, 5));

if (sortedNearbies.length > 5) {
    for (let i = 5; i < sortedNearbies.length; i++) {
        const mod = (i - 5) % 3;
        const columnIndex = (mod + 1) % 3;
        groupedNearbies[columnIndex].push(sortedNearbies[i]);
    }
}


const siteConfig = await getEntry("site", "settings");
const { site_title: pageTitle, hero_title: heroTitle } = siteConfig?.data ?? {};
---

<BaseLayout pageTitle={pageTitle}>
    <Hero title={heroTitle} />
    <RestaurantSection
        groupedRestaurants={groupedRestaurants}
        restaurantText={restaurantText.data}
    />
    <MenuSection pageTitle={pageTitle} />
    <EventSection />
    <NearbySection groupedNearbies={columns} nearbyText={nearbyText.data} />
    <InfoSection />
    <CookieConsentProvider client:load />
</BaseLayout>
