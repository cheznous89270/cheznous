---
// Configuration & Types
import { siteConfig } from "@content/config";
import type { RestaurantEntry, NearbyEntry } from "../types/content";

// Layouts & Components
import BaseLayout from "@layouts/BaseLayout.astro";
import {
    Hero,
    RestaurantSection,
    MenuSection,
    EventSection,
    NearbySection,
    InfoSection,
} from "@components/index";

// Data loading
import { getCollection, getEntry } from "astro:content";

// Load all content collections in parallel
const [globalEntries, restaurantEntries, nearbyEntries] = await Promise.all([
    getCollection("global"),
    getCollection("restaurant"),
    getCollection("nearby"),
]);

// Get global text content
const restaurantText = globalEntries.find((e) => e.slug === "restaurant-text");
if (!restaurantText) throw new Error("'restaurant-text' est manquant");

const nearbyText = globalEntries.find((e) => e.slug === "nearby-text");
if (!nearbyText) throw new Error("'nearby-text' est manquant");

const sortedRestaurants = [...restaurantEntries].sort(
    (a, b) => a.data.id - b.data.id,
);
const groupedRestaurants: RestaurantEntry[][] = [
    sortedRestaurants.slice(0, 2),
    sortedRestaurants.slice(2, 3),
    sortedRestaurants.slice(3, 5),
];

const sortedNearbies = [...nearbyEntries].sort((a, b) => a.data.id - b.data.id);
const columns: NearbyEntry[][] = [[], [], []];

columns[0].push(...sortedNearbies.slice(0, 2));
columns[1].push(...sortedNearbies.slice(2, 3));
columns[2].push(...sortedNearbies.slice(3, 6));

if (sortedNearbies.length > 6) {
    for (let i = 6; i < sortedNearbies.length; i++) {
        const mod = (i - 6) % 3;
        if (mod === 0) columns[0].push(sortedNearbies[i]);
        else if (mod === 1) columns[1].push(sortedNearbies[i]);
        else columns[2].push(sortedNearbies[i]);
    }
}

// Page metadata
const pageTitle = siteConfig.titles.SITE_TITLE;
const heroTitle = siteConfig.titles.HERO_TITLE;
---

<BaseLayout pageTitle={pageTitle}>
    <Hero title={heroTitle} />

    <RestaurantSection
        groupedRestaurants={groupedRestaurants}
        restaurantText={restaurantText.data}
    />

    <MenuSection pageTitle={pageTitle} />
    <EventSection />
    <!-- <BusinessHours client:load /> -->
    <NearbySection groupedNearbies={columns} nearbyText={nearbyText.data} />
    <InfoSection />
</BaseLayout>
